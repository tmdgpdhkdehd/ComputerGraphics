import "./styles.css";
import * as THREE from "three";

const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(
  55, // 얼마나 멀리? 높이? 넓은 영역을 바라보느냐
  window.innerWidth / window.innerHeight, // 가로세로
  0.1, // near
  1000 // far
);
scene.add(camera);

const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.shadowMap.enabled = true; // 그림자 활성화
document.body.appendChild(renderer.domElement);

const cube = new THREE.Mesh(
  new THREE.BoxGeometry(1,1,1), // x, y, z 크기
  new THREE.MeshStandardMaterial({color: 0xffffff})  
);
scene.add(cube);

const plane = new THREE.Mesh(
  new THREE.PlaneGeometry(5,5),
  new THREE.MeshStandardMaterial({color: 0xffffff})
);
plane.rotation.x = -Math.PI / 2;
plane.position.y -= 1.5;
scene.add(plane);

camera.position.set(0,5,5);
camera.lookAt(cube.position);

const amblight = new THREE.AmbientLight(0x777777);
scene.add(amblight);
const dirlight = new THREE.DirectionalLight(0xffffff, 0.5);
dirlight.position.set(1,2,1); // 이 지점에서 원점 방향으로 평행광
scene.add(dirlight);

function update()
{
  requestAnimationFrame(update);
  cube.rotation.x += 0.01;
  cube.rotation.y += 0.02;
  cube.rotation.z += 0.03;
  renderer.render(scene, camera);
}

update();
